{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["JangKengGame","props","state","basics","player","computer","judgement","i18n","URI","LANG","window","fetch","this","then","res","json","data","setState","cpu","user","hand","userHand","cpuHand","Math","floor","random","judge","title","hands","status","onClick","v","handleClick","src","React","Component","TableView","judgements","header","contents","class","map","content","InputBox","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,CACNC,OAAQ,KACRC,SAAU,KACVC,UAAW,MAEbC,KAAM,MAER,EAAKC,IAAM,kCACX,EAAKC,KAAO,KAXM,E,qDAcpB,WAAsB,IAAD,OACnBC,OACGC,MAAMC,KAAKJ,KACXK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAK,EAAKN,SACvBI,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEV,KAAMS,S,mBAGxC,SAAOE,EAAKC,GACV,OAAQD,IAAQC,GAAQ,I,yBAG1B,SAAaC,GACX,IAAMC,EAAWD,EACXE,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC1BnB,EAAYM,KAAKc,MAAMJ,EAASD,GACtCT,KAAKK,SAAS,CACZd,OAAQ,CAAEC,OAAQiB,EAAUhB,SAAUiB,EAAShB,UAAWA,O,oBAI9D,WAAW,IAAD,OACR,IAAKM,KAAKV,MAAMK,KAAM,OAAO,kDADrB,MAEiBK,KAAKV,MAAMK,KAA5BoB,EAFA,EAEAA,MAAOC,EAFP,EAEOA,MACf,OACE,qCACE,6BAAKD,IACL,cAAC,EAAD,CAAWE,OAAQjB,KAAKV,QACxB,cAAC,EAAD,CAAU0B,MAAOA,EAAOE,QAAS,SAAAC,GAAC,OAAI,EAAKC,YAAYD,MACvD,wBAAQE,IAAI,uB,GA5COC,IAAMC,WAkD3BC,EAAY,SAAAnC,GAAU,IAAD,EACeA,EAAM4B,OAAO1B,OAA7CC,EADiB,EACjBA,OAAQC,EADS,EACTA,SAAUC,EADD,EACCA,UADD,EAEaL,EAAM4B,OAAOtB,KAA3CqB,EAFiB,EAEjBA,MAAOS,EAFU,EAEVA,WAAYC,EAFF,EAEEA,OACrBC,EAAW,CACf,CAACD,EAAO,GAAIV,EAAMvB,IAClB,CAACiC,EAAO,GAAID,EAAW/B,IACvB,CAACgC,EAAO,GAAIV,EAAMxB,KAEpB,OACE,qBAAKoC,MAAM,cAAX,SACA,gCACE,gCACGD,EAASE,KAAI,mCAAEH,EAAF,KAAUI,EAAV,YACZ,+BACE,6BAAI,6BAAKJ,MACT,6BAAKI,MAFEJ,aAWbK,EAAW,SAAA1C,GAAU,IACjB2B,EAAmB3B,EAAnB2B,MAAOE,EAAY7B,EAAZ6B,QACf,OACE,0DACD,qBAAKU,MAAM,cAAX,SACIZ,EAAMa,KAAI,SAACV,EAAGa,GAAJ,OACT,wBAAgBd,QAAS,kBAAMA,EAAQc,IAAvC,SACGb,GADUA,YAaN/B,ICpFA6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.048b572b.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nclass JangKengGame extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      basics: {\n        player: null,\n        computer: null,\n        judgement: null\n      },\n      i18n: null\n    }\n    this.URI = 'http://localhost:8080/i18n.json'\n    this.LANG = 'ja'\n  }\n\n  componentDidMount () {\n    window\n      .fetch(this.URI)\n      .then(res => res.json())\n      .then(json => json[this.LANG])\n      .then(data => this.setState({ i18n: data }))\n  }\n\n  judge (cpu, user) {\n    return (cpu !== user) % 3\n  }\n\n  handleClick (hand) {\n    const userHand = hand\n    const cpuHand = Math.floor(Math.random() * 4)\n    const judgement = this.judge(cpuHand, userHand)\n    this.setState({\n      basics: { player: userHand, computer: cpuHand, judgement: judgement }\n    })\n  }\n\n  render () {\n    if (!this.state.i18n) return <div> Now Loading...</div>\n    const { title, hands } = this.state.i18n\n    return (\n      <>\n        <h1>{title}</h1>\n        <TableView status={this.state} />\n        <InputBox hands={hands} onClick={v => this.handleClick(v)} />\n        <script src='src/Tab.jsx' />\n      </>\n    )\n  }\n}\n\nconst TableView = props => {\n  const { player, computer, judgement } = props.status.basics\n  const { hands, judgements, header } = props.status.i18n\n  const contents = [\n    [header[1], hands[computer]],\n    [header[2], judgements[judgement]],\n    [header[0], hands[player]]\n  ]\n  return (\n    <div class=\"jundgements\">\n    <table>\n      <tbody>\n        {contents.map(([header, content]) => (\n          <tr key={header}>\n            <h3><th>{header}</th></h3>\n            <td>{content}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    </div>\n  )\n}\n\nconst InputBox = props => {\n  const { hands, onClick } = props\n  return (\n    <>\n　　　<div class=\"button-area\">\n      {hands.map((v, i) => (\n        <button key={v} onClick={() => onClick(i)}>\n          {v}\n        </button>\n      ))}\n      </div>\n    </>\n  )\n}\n\n\n\n\n\nexport default JangKengGame\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}